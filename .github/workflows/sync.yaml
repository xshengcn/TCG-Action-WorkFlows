name: SYNC POKEMON TCG

on:
  schedule:
    - cron: '0 */2 * * *'  # 每2小时执行一次（UTC）
  workflow_dispatch:

permissions:
  contents: write

env:
  GIT_NAME: "${{ secrets.GIT_NAME }}"
  GIT_EMAIL: "${{ secrets.GIT_EMAIL }}"
  GITHUB_TOKEN: "${{ secrets.MY_GITHUB_TOKEN }}"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Delete local files
        run: |
          echo "🔷 正在执行步骤：Delete local files"
          rm -f README.md 
          rm -f tcg-pokemon.old.json
          cp tcg-pokemon.json tcg-pokemon.old.json 2>/dev/null || true
          rm -f tcg-pokemon.json
          rm -f sync-metadata.json

      - name: Get Pokémon TCG cards data
        run: |
          echo "🔷 正在执行步骤：Get Pokémon TCG cards data"

          echo "🧹 初始化 tcg-pokemon.json..."
          echo '{"data": [], "totalCount": 0}' > tcg-pokemon.json

          page=1
          pageSize=250

          echo "🌐 正在获取第 $page 页数据..."
          curl -sS "https://api.pokemontcg.io/v2/cards?page=$page&pageSize=$pageSize" > temp.json

          echo "📊 读取 totalCount..."
          totalCount=$(jq '.totalCount' temp.json)
          echo "👉 共 $totalCount 张卡片"

          echo "📦 写入 totalCount 到 tcg-pokemon.json..."
          jq ".totalCount = $totalCount" tcg-pokemon.json > tcg-pokemon.tmp.json
          jq -c . tcg-pokemon.tmp.json > tcg-pokemon.json && rm tcg-pokemon.tmp.json

          count=$(jq '.count' temp.json)

          echo "🔁 开始分页抓取与合并..."
          while [ $count -eq $pageSize ]; do
            echo "➕ 合并第 $page 页数据..."
            jq -s '.[0].data += .[1].data | .[0]' tcg-pokemon.json temp.json > tcg-pokemon.tmp.json
            jq -c . tcg-pokemon.tmp.json > tcg-pokemon.json && rm tcg-pokemon.tmp.json

            page=$((page + 1))
            echo "🌐 正在获取第 $page 页数据..."
            curl -sS "https://api.pokemontcg.io/v2/cards?page=$page&pageSize=$pageSize" > temp.json
            count=$(jq '.count' temp.json)
          done

          echo "➕ 合并最后一页数据..."
          jq -s '.[0].data += .[1].data | .[0]' tcg-pokemon.json temp.json > tcg-pokemon.tmp.json
          jq -c . tcg-pokemon.tmp.json > tcg-pokemon.json && rm tcg-pokemon.tmp.json

          echo "🧼 删除临时文件..."
          rm -f temp.json

          card_count=$(jq '[.data[]] | length' tcg-pokemon.json)
          echo "✅ 数据获取完成，共 $card_count 张卡片"

      - name: Transform data structure
        run: |
          echo "🔷 正在执行步骤：Transform data structure"

          jq '{
            totalCount: .totalCount,
            data: (
              .data
              | sort_by(.set.id)
              | group_by(.set.id)
              | map({
                  id: .[0].set.id,
                  name: .[0].set.name,
                  cards: map(del(.set))
                })
            )
          }' tcg-pokemon.json > tcg-pokemon.tmp.json

          jq -c . tcg-pokemon.tmp.json > tcg-pokemon.json && rm tcg-pokemon.tmp.json
          echo "✅ 数据结构转换完成"

      - name: Record sync metadata
        run: |
          echo "🔷 正在执行步骤：Record sync metadata"

          timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          totalCards=$(jq '[.data[].cards[]] | length' tcg-pokemon.json)
          setCount=$(jq '.data | length' tcg-pokemon.json)

          version=1
          if [ -f sync-metadata.json ]; then
            old_version=$(jq -r '.version // 1' sync-metadata.json)
            version=$old_version
          fi

          if [ -f tcg-pokemon.old.json ]; then
            if ! diff -q tcg-pokemon.old.json tcg-pokemon.json > /dev/null; then
              echo "🔄 数据发生变化，版本号 +1"
              version=$((version + 1))
            else
              echo "✅ 数据无变化，版本号保持为 $version"
            fi
            rm -f tcg-pokemon.old.json
          fi

          jq -n \
            --arg ts "$timestamp" \
            --argjson cards "$totalCards" \
            --argjson setCount "$setCount" \
            --argjson version "$version" \
            '{timestamp: $ts, totalCards: $cards, setCount: $setCount, version: $version}' > sync-metadata.json

          echo "✅ 写入 sync-metadata.json（版本：v$version）完成"

      - name: Add version to tcg-pokemon.json
        run: |
          echo "🔷 正在执行步骤：Add version to tcg-pokemon.json"

          version=$(jq -r '.version' sync-metadata.json)

          jq --argjson version "$version" '.version = $version | .' tcg-pokemon.json > tcg-pokemon.tmp.json
          jq -c . tcg-pokemon.tmp.json > tcg-pokemon.json && rm tcg-pokemon.tmp.json

          echo "✅ 已添加 version 字段到 tcg-pokemon.json（v$version）"

      - name: Update README.md
        run: |
          echo "🔷 正在执行步骤：Update README.md"
          echo "生成 README.md..."

          timestamp=$(jq -r '.timestamp' sync-metadata.json)
          totalCards=$(jq -r '.totalCards' sync-metadata.json)
          setCount=$(jq -r '.setCount' sync-metadata.json)
          version=$(jq -r '.version' sync-metadata.json)

          echo "# Pokemon TCG 数据同步" > README.md
          echo "" >> README.md
          echo "## $timestamp" >> README.md
          echo "" >> README.md
          echo "## 数据统计" >> README.md
          echo "- **版本号**: v$version" >> README.md
          echo "- **总卡片数量**: $totalCards 张" >> README.md
          echo "- **卡组数量**: $setCount 个" >> README.md
          echo "- **数据来源**: [Pokemon TCG API](https://pokemontcg.io/)" >> README.md
          echo "" >> README.md
          echo "## 数据结构" >> README.md
          echo "\`\`\`json" >> README.md
          echo "{" >> README.md
          echo "  \"totalCount\": 数字," >> README.md
          echo "  \"version\": 数字," >> README.md
          echo "  \"data\": [" >> README.md
          echo "    {" >> README.md
          echo "      \"set\": {" >> README.md
          echo "        \"id\": \"set_id\"," >> README.md
          echo "        \"name\": \"set_name\"" >> README.md
          echo "      }," >> README.md
          echo "      \"cards\": [...]" >> README.md
          echo "    }" >> README.md
          echo "  ]" >> README.md
          echo "}" >> README.md
          echo "\`\`\`" >> README.md
          echo "" >> README.md
          echo "## 自动更新" >> README.md
          echo "此数据每2小时自动更新一次，确保数据的时效性。" >> README.md
          echo "" >> README.md
          echo "---" >> README.md
          echo "*数据由 GitHub Actions 自动维护*" >> README.md

          echo "✅ README.md 生成完成"

      - name: Commit changes
        run: |
          echo "🔷 正在执行步骤：Commit changes"
          git config --local user.email "$GIT_EMAIL"
          git config --local user.name "$GIT_NAME"
          git add .
          if git diff --cached --quiet; then
            echo "✅ 无变更，无需提交"
          else
            git commit -m "update"
            echo "✅ Git 提交完成"
          fi

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: "${{ secrets.MY_GITHUB_TOKEN }}"
          branch: main

      - name: Summary
        run: |
          echo "🎉 同步完成!"
          echo "📊 统计信息:"
          echo "   - 总卡片数: $(jq -r '.totalCards' sync-metadata.json)"
          echo "   - 卡组数量: $(jq -r '.setCount' sync-metadata.json)"
          echo "   - 更新时间: $(jq -r '.timestamp' sync-metadata.json)"
          echo "   - 当前版本: v$(jq -r '.version' sync-metadata.json)"